name: CI - Terraform & Wazuh Docker Compose

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: assessment/terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Terraform Init (local backend for CI)
        run: terraform init -backend=false

      - name: Terraform Validate
        run: terraform validate


  
  docker-compose:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: assessment/docker
    services:
      docker:
        image: docker:24.0.7-dind
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Generate Wazuh Indexer Certs
        run: |
          mkdir -p ./config/wazuh_indexer_ssl_certs
          if [ -f generate-indexer-certs.yml ]; then
            docker compose -f generate-indexer-certs.yml run --rm generator
          fi


      - name: Docker Compose Up (test)
        run: |
          docker compose up -d
          sleep 10
          docker ps -a
          docker compose ps


      - name: Wait for Wazuh Manager container
        id: wait_manager
        run: |
          for i in {1..10}; do
            MANAGER_ID=$(docker ps --format '{{.ID}} {{.Image}}' | grep 'wazuh/wazuh-manager' | awk '{print $1}')
            if [ -n "$MANAGER_ID" ]; then
              echo "manager_id=$MANAGER_ID" >> $GITHUB_OUTPUT
              exit 0
            fi
            sleep 10
          done
          docker ps -a
          docker logs $(docker ps -aq)
          exit 1



      - name: Healthcheck Wazuh Manager
        run: |
          MANAGER_ID=${{ steps.wait_manager.outputs.manager_id }}
          docker exec $MANAGER_ID curl -f http://localhost:55000



      - name: Healthcheck Wazuh Dashboard
        run: |
          DASHBOARD_ID=$(docker ps --format '{{.ID}} {{.Image}}' | grep 'wazuh/wazuh-dashboard' | awk '{print $1}')
          docker exec $DASHBOARD_ID curl -f http://localhost:5601


      - name: Print all container logs on failure
        if: failure()
        run: docker logs $(docker ps -aq)

      - name: Docker Compose Down
        if: always()
        run: docker compose down -v
